= 表数据入口基础类 QTable_Base =

表数据入口封装对一个数据表的操作。

 * 表数据入口提供记录的 create、update 和 delete 操作。记录的查询操作委托给查询对象完成。create、update、delete 分为单个记录和批量记录操作两种方式。
 * 表数据入口继承类可以定义多个关联。定义关联后，可以在操作表数据入口时，间接的操作关联的数据表。
 * 表数据入口提供一系列辅助方法，以便表数据入口扩展、关联处理、查询对象和应用程序能够针对数据表进行各种操作。
 * 每个表数据入口对象都包含对应数据表的元数据。元数据包含表名称、表的完全限定名、表所属的 schema、表的所有字段及字段元数据、表的主键字段。

*类名称：QTable_Base*

== 表数据入口的主要方法和属性 ==

查询：
 * find() 返回一个查询对象
 * find_by_sql() 直接执行一个 SQL 语句，并返回结果集（数组）

创建：
 * create 创建一条新记录
 * create_rowset 批量创建新记录

更新：
 * update() 更新一条记录
 * update_rowset()
 * update_where() 更新所有符合条件的记录
 * incr_where() 增加所有符合条件记录的指定字段值
 * decr_where() 减小所有符合条件记录的指定字段值

创建或更新：
 * save() 根据是否包含主键字段值，创建或更新一条记录
 * save_rowset()
 * replace() 由数据库的 REPLACE 命令实现，创建或更新一条记录
 * replace_rowset()

删除：
 * remove() 删除指定主键值的记录
 * remove_where() 删除所有符合条件的记录

元数据：
 * columns() 获得所有字段的元数据
 * $full_table_name 包含前缀的数据表名称
 * $q_table_name 包含前缀的数据表完全限定名
 * $primary_key 主键字段名

辅助操作：
 * next_id() 获得该数据表的下一个插入ID
 * get_dbo() 返回该表数据入口对象使用的数据库访问对象
 * set_dbo()
 * is_connected() 表数据入口对象是否已经连接到数据库
 * connect() 连接到数据库